name: inji-web build upon a push

on:
  release:
    types: [ published ]
  pull_request:
    types: [ opened, reopened, synchronize ]
  push:
    branches:
      - '!release-branch'
      - release*
      - master
      - 1.*
      - develop
      - qa-develop
      - MOSIP*
      - injiweb*

jobs:
  build-dockers-inji-web:
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: "inji-web"
            SERVICE_NAME: "inji-web"
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-inji-web:
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.dev_namespace_docker_hub }}
      SERVICE_NAME: ui-test
      SERVICE_LOCATION: ui-test
      BUILD_ARTIFACT: ui-test-local
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3.7.0
        with:
          node-version: '18'
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-
      - name: Install the dependencies
        run: npm install
        working-directory: inji-web
      - name: Run unit tests with coverage
        run: npm test -- --coverage
        working-directory: inji-web
      - name: Build the project
        run: npm run build
        working-directory: inji-web


  sonar-analysis-inji-web:
    if: "${{ github.event_name != 'pull_request' }}"
    needs: build-dockers-inji-web
    uses: mosip/kattu/.github/workflows/npm-sonar-analysis.yml@master-java21
    with:
      SERVICE_LOCATION: ./inji-web
      SONAR_URL: 'https://sonarcloud.io'
      PROJECT_KEY: 'mosip_inji-web'
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      ORG_KEY: ${{ secrets.ORG_KEY }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-maven-ui-test:
    uses: anup-nehe/kattu/.github/workflows/maven-build.yml@master-java21
    with:
      SERVICE_LOCATION: ./ui-test
      BUILD_ARTIFACT: ui-test
    secrets:
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}
      OSSRH_USER: ${{ secrets.OSSRH_USER }}
      OSSRH_SECRET: ${{ secrets.OSSRH_SECRET }}
      OSSRH_TOKEN: ${{ secrets.OSSRH_TOKEN }}
      GPG_SECRET: ${{ secrets.GPG_SECRET }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}

  build-ui-test-local:
    needs: build-maven-ui-test
    runs-on: ubuntu-latest
    env:
      NAMESPACE: ${{ secrets.dev_namespace_docker_hub }}
      SERVICE_NAME: uitest-web
      SERVICE_LOCATION: ui-test
      BUILD_ARTIFACT: ui-test-local
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '21'
          server-id: ossrh # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Setup the settings file for ossrh server
        run: echo "<settings> <servers>  <server>  <id>ossrh</id>    <username>${{secrets.ossrh_user}}</username> <password>${{secrets.ossrh_secret}}</password> </server> </servers> <profiles> <profile>     <id>ossrh</id> <activation> <activeByDefault>true</activeByDefault> </activation>  <properties> <gpg.executable>gpg2</gpg.executable> <gpg.passphrase>${{secrets.gpg_secret}}</gpg.passphrase> </properties> </profile> <profile> <id>allow-snapshots</id>       <activation><activeByDefault>true</activeByDefault></activation> <repositories> <repository>        <id>snapshots-repo</id> <url>https://oss.sonatype.org/content/repositories/snapshots</url> <releases><enabled>false</enabled></releases> <snapshots><enabled>true</enabled></snapshots> </repository>  <repository>         <id>releases-repo</id>  <url>https://oss.sonatype.org/service/local/staging/deploy/maven2</url>         <releases><enabled>true</enabled></releases>         <snapshots><enabled>false</enabled></snapshots> </repository> </repositories>  </profile> <profile> <id>sonar</id> <properties>  <sonar.sources>.</sonar.sources> <sonar.host.url>https://sonarcloud.io</sonar.host.url>  </properties> <activation> <activeByDefault>false</activeByDefault> </activation> </profile> </profiles> </settings>" > $GITHUB_WORKSPACE/settings.xml

      - name: Build ui-test with Maven
        run: |
          cd ${{ env.SERVICE_LOCATION}}
          mvn -U -B package -DskipTests -Dmaven.wagon.http.retryHandler.count=2 --file pom.xml -s $GITHUB_WORKSPACE/settings.xml

      - name: Ready the springboot artifacts
        if: ${{ !contains(github.ref, 'master') || !contains(github.ref, 'main') }}
        run: |
          ## FIND JARS & COPY ONLY EXECUTABLE JARs STORED UNDER TARGET DIRECTORY 
          find ${{ env.SERVICE_LOCATION }} -path '*/target/*' -name '*.jar'  -type f -exec zip ${{ env.BUILD_ARTIFACT }}.zip {} +

      - name: Upload the springboot jars
        if: ${{ !contains(github.ref, 'master') || !contains(github.ref, 'main') }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BUILD_ARTIFACT }}
          path: ${{ env.BUILD_ARTIFACT }}.zip

      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,commit,workflow,job # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure() # Pick up events even if the job fails or is canceled.

  build-dockers-ui-test:
    needs: build-ui-test-local
    strategy:
      matrix:
        include:
          - SERVICE_LOCATION: 'ui-test'
            SERVICE_NAME: 'ui-test'
            BUILD_ARTIFACT: 'ui-test-local'
      fail-fast: false
    name: ${{ matrix.SERVICE_NAME }}
    uses: mosip/kattu/.github/workflows/docker-build.yml@master-java21
    with:
      SERVICE_LOCATION: ${{ matrix.SERVICE_LOCATION }}
      SERVICE_NAME: ${{ matrix.SERVICE_NAME }}
      BUILD_ARTIFACT: ${{ matrix.BUILD_ARTIFACT }}
    secrets:
      DEV_NAMESPACE_DOCKER_HUB: ${{ secrets.DEV_NAMESPACE_DOCKER_HUB }}
      ACTOR_DOCKER_HUB: ${{ secrets.ACTOR_DOCKER_HUB }}
      RELEASE_DOCKER_HUB: ${{ secrets.RELEASE_DOCKER_HUB }}
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}